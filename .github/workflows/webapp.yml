name: WEBAPP Test CI

on:
  pull_request:
    branches:
      - main 

jobs:
  test:
    name: Run Jest Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Start MySQL
        run: |
          docker run -d \
            --name mysql-test \
            -e MYSQL_ROOT_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -e MYSQL_DATABASE=${{ secrets.DB_NAME }} \
            -e MYSQL_USER=${{ secrets.DB_USERNAME }} \
            -e MYSQL_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -p 3306:3306 \
            mysql:latest

      - name: Wait for MySQL to be Ready
        run: |
          for i in {1..30}; do
            if mysqladmin ping -h 127.0.0.1 --user=${{ secrets.DB_USERNAME }} --password=${{ secrets.DB_PASSWORD }} --silent; then
              echo "MySQL is ready"
              exit 0
            fi
            echo "Waiting for MySQL..."
            sleep 2
          done
          echo "MySQL did not start in time" >&2
          exit 1

      - name: Create .env File
        run: |
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_HOST=127.0.0.1" >> .env 
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env

      - name: Install Dependencies
        run: npm install

      - name: Run Tests
        run: npx jest
        env:
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: 127.0.0.1
          DB_PORT: ${{ secrets.DB_PORT }}
