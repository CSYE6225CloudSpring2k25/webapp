name: CI Workflow Testing

on: [pull_request]

jobs:
  run-integration-tests:
    runs-on: ubuntu-latest
    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Enable mysql service
        run: sudo systemctl start mysql


      # - name: Remove Existing MySQL (If Any)
      #   run: |
      #     echo "Removing any existing MySQL installation..."
      #     sudo apt-get remove --purge mysql-server mysql-client mysql-common mysql-server-core-* mysql-client-core-* -y || true
      #     sudo rm -rf /etc/mysql /var/lib/mysql /var/log/mysql
      #     sudo apt autoremove -y
      #     sudo apt autoclean -y

      # - name: Install MySQL
      #   run: |
      #     echo "Installing MySQL Server..."
      #     sudo apt-get update
      #     sudo apt-get install -y mysql-server
      #     sudo systemctl start mysql
      #     sudo systemctl enable mysql

      # - name: Configure MySQL Database & User
      #   run: |
      #     echo "Creating database and user..."
      #     sudo mysql --user=${{ secrets.DB_USERNAME }} --password=${{ secrets.DB_PASSWORD }} --execute="CREATE DATABASE IF NOT EXISTS ${{ secrets.DB_NAME }};"
      
      # - name: Configure MySQL Database & User
      #   run: |
      #     echo "Creating database and user..."
      #     sudo mysql -u root --execute="
      #       CREATE DATABASE IF NOT EXISTS ${{ secrets.DB_NAME }};
      #       CREATE USER IF NOT EXISTS '${{ secrets.DB_USERNAME }}'@'localhost' IDENTIFIED BY '${{ secrets.DB_PASSWORD }}';
      #       GRANT ALL PRIVILEGES ON ${{ secrets.DB_NAME }}.* TO '${{ secrets.DB_USERNAME }}'@'localhost';
      #       FLUSH PRIVILEGES;"

      - name: Create .env File
        run: |
          echo "DB_NAME=${{ secrets.DB_NAME }}" > src/.env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> src/.env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> src/.env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> src/.env 
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> src/.env

      - name: Verify .env File Contents
        run: cat src/.env


      - name: Install Project Dependencies
        run: npm install
        working-directory: src

      - name: Wait for MySQL to be Ready
        run: |
          echo "Waiting for MySQL to be ready..."
          for i in {1..30}; do
            if mysqladmin ping -h 127.0.0.1 --silent; then
              echo "MySQL is ready!"
              break
            fi
            echo "Waiting for MySQL..."
            sleep 2
          done

      - name: Initialize MySQL Database as Root
        run: |
          sudo mysql -u"${{ secrets.DB_USERNAME }}" --password="${{ secrets.DB_PASSWORD }}" <<EOF
          CREATE DATABASE IF NOT EXISTS \`${{ secrets.DB_NAME }}\`;
          EOF


      - name: Run Tests
        run: npx jest
        env:
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
        working-directory: src
